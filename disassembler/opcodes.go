package disassembler

var opcodes = map[string]*instruction{
	"00": newInstruction("NOP", 1, "", ""),
	"01": newInstruction("LXI B,D16", 3, "B &lt;- byte 3, C &lt;- byte 2", ""),
	"02": newInstruction("STAX B", 1, "(BC) &lt;- A", ""),
	"03": newInstruction("INX B", 1, "BC &lt;- BC+1", ""),
	"04": newInstruction("INR B", 1, "Z, S, P, AC", "B &lt;- B+1"),
	"05": newInstruction("DCR B", 1, "Z, S, P, AC", "B &lt;- B-1"),
	"06": newInstruction("MVI B, D8", 2, "B &lt;- byte 2", ""),
	"07": newInstruction("RLC", 1, "CY", "A = A &lt;&lt; 1; bit 0 = prev bit 7; CY = prev bit 7"),
	"08": newInstruction("-", 0, "", ""),
	"09": newInstruction("DAD B", 1, "CY", "HL = HL + BC"),
	"0a": newInstruction("LDAX B", 1, "A &lt;- (BC)", ""),
	"0b": newInstruction("DCX B", 1, "BC = BC-1", ""),
	"0c": newInstruction("INR C", 1, "Z, S, P, AC", "C &lt;- C+1"),
	"0d": newInstruction("DCR C", 1, "Z, S, P, AC", "C &lt;-C-1"),
	"0e": newInstruction("MVI C,D8", 2, "C &lt;- byte 2", ""),
	"0f": newInstruction("RRC", 1, "CY", "A = A &gt;&gt; 1; bit 7 = prev bit 0; CY = prev bit 0"),
	"10": newInstruction("-", 0, "", ""),
	"11": newInstruction("LXI D,D16", 3, "D &lt;- byte 3, E &lt;- byte 2", ""),
	"12": newInstruction("STAX D", 1, "(DE) &lt;- A", ""),
	"13": newInstruction("INX D", 1, "DE &lt;- DE + 1", ""),
	"14": newInstruction("INR D", 1, "Z, S, P, AC", "D &lt;- D+1"),
	"15": newInstruction("DCR D", 1, "Z, S, P, AC", "D &lt;- D-1"),
	"16": newInstruction("MVI D, D8", 2, "D &lt;- byte 2", ""),
	"17": newInstruction("RAL", 1, "CY", "A = A &lt;&lt; 1; bit 0 = prev CY; CY = prev bit 7"),
	"18": newInstruction("-", 0, "", ""),
	"19": newInstruction("DAD D", 1, "CY", "HL = HL + DE"),
	"1a": newInstruction("LDAX D", 1, "A &lt;- (DE)", ""),
	"1b": newInstruction("DCX D", 1, "DE = DE-1", ""),
	"1c": newInstruction("INR E", 1, "Z, S, P, AC", "E &lt;-E+1"),
	"1d": newInstruction("DCR E", 1, "Z, S, P, AC", "E &lt;- E-1"),
	"1e": newInstruction("MVI E,D8", 2, "E &lt;- byte 2", ""),
	"1f": newInstruction("RAR", 1, "CY", "A = A &gt;&gt; 1; bit 7 = prev bit 7; CY = prev bit 0"),
	"20": newInstruction("RIM", 1, "special", ""),
	"21": newInstruction("LXI H,D16", 3, "H &lt;- byte 3, L &lt;- byte 2", ""),
	"22": newInstruction("SHLD adr", 3, "(adr) &lt;-L; (adr+1)&lt;-H", ""),
	"23": newInstruction("INX H", 1, "HL &lt;- HL + 1", ""),
	"24": newInstruction("INR H", 1, "Z, S, P, AC", "H &lt;- H+1"),
	"25": newInstruction("DCR H", 1, "Z, S, P, AC", "H &lt;- H-1"),
	"26": newInstruction("MVI H,D8", 2, "L &lt;- byte 2", ""),
	"27": newInstruction("DAA", 1, "special", ""),
	"28": newInstruction("-", 0, "", ""),
	"29": newInstruction("DAD H", 1, "CY", "HL = HL + HI"),
	"2a": newInstruction("LHLD adr", 3, "L &lt;- (adr); H&lt;-(adr+1)", ""),
	"2b": newInstruction("DCX H", 1, "HL = HL-1", ""),
	"2c": newInstruction("INR L", 1, "Z, S, P, AC", "L &lt;- L+1"),
	"2d": newInstruction("DCR L", 1, "Z, S, P, AC", "L &lt;- L-1"),
	"2e": newInstruction("MVI L, D8", 2, "L &lt;- byte 2", ""),
	"2f": newInstruction("CMA", 1, "A &lt;- !A", ""),
	"30": newInstruction("SIM", 1, "special", ""),
	"31": newInstruction("LXI SP, D16", 3, "SP.hi &lt;- byte 3, SP.lo &lt;- byte 2", ""),
	"32": newInstruction("STA adr", 3, "(adr) &lt;- A", ""),
	"33": newInstruction("INX SP", 1, "SP = SP + 1", ""),
	"34": newInstruction("INR M", 1, "Z, S, P, AC", "(HL) &lt;- (HL)+1"),
	"35": newInstruction("DCR M", 1, "Z, S, P, AC", "(HL) &lt;- (HL)-1"),
	"36": newInstruction("MVI M,D8", 2, "(HL) &lt;- byte 2", ""),
	"37": newInstruction("STC", 1, "CY", "CY = 1"),
	"38": newInstruction("-", 0, "", ""),
	"39": newInstruction("DAD SP", 1, "CY", "HL = HL + SP"),
	"3a": newInstruction("LDA adr", 3, "A &lt;- (adr)", ""),
	"3b": newInstruction("DCX SP", 1, "SP = SP-1", ""),
	"3c": newInstruction("INR A", 1, "Z, S, P, AC", "A &lt;- A+1"),
	"3d": newInstruction("DCR A", 1, "Z, S, P, AC", "A &lt;- A-1"),
	"3e": newInstruction("MVI A,D8", 2, "A &lt;- byte 2", ""),
	"3f": newInstruction("CMC", 1, "CY", "CY=!CY"),
	"40": newInstruction("MOV B,B", 1, "B &lt;- B", ""),
	"41": newInstruction("MOV B,C", 1, "B &lt;- C", ""),
	"42": newInstruction("MOV B,D", 1, "B &lt;- D", ""),
	"43": newInstruction("MOV B,E", 1, "B &lt;- E", ""),
	"44": newInstruction("MOV B,H", 1, "B &lt;- H", ""),
	"45": newInstruction("MOV B,L", 1, "B &lt;- L", ""),
	"46": newInstruction("MOV B,M", 1, "B &lt;- (HL)", ""),
	"47": newInstruction("MOV B,A", 1, "B &lt;- A", ""),
	"48": newInstruction("MOV C,B", 1, "C &lt;- B", ""),
	"49": newInstruction("MOV C,C", 1, "C &lt;- C", ""),
	"4a": newInstruction("MOV C,D", 1, "C &lt;- D", ""),
	"4b": newInstruction("MOV C,E", 1, "C &lt;- E", ""),
	"4c": newInstruction("MOV C,H", 1, "C &lt;- H", ""),
	"4d": newInstruction("MOV C,L", 1, "C &lt;- L", ""),
	"4e": newInstruction("MOV C,M", 1, "C &lt;- (HL)", ""),
	"4f": newInstruction("MOV C,A", 1, "C &lt;- A", ""),
	"50": newInstruction("MOV D,B", 1, "D &lt;- B", ""),
	"51": newInstruction("MOV D,C", 1, "D &lt;- C", ""),
	"52": newInstruction("MOV D,D", 1, "D &lt;- D", ""),
	"53": newInstruction("MOV D,E", 1, "D &lt;- E", ""),
	"54": newInstruction("MOV D,H", 1, "D &lt;- H", ""),
	"55": newInstruction("MOV D,L", 1, "D &lt;- L", ""),
	"56": newInstruction("MOV D,M", 1, "D &lt;- (HL)", ""),
	"57": newInstruction("MOV D,A", 1, "D &lt;- A", ""),
	"58": newInstruction("MOV E,B", 1, " ", "E &lt;- B"),
	"59": newInstruction("MOV E,C", 1, "E &lt;- C", ""),
	"5a": newInstruction("MOV E,D", 1, "E &lt;- D", ""),
	"5b": newInstruction("MOV E,E", 1, "E &lt;- E", ""),
	"5c": newInstruction("MOV E,H", 1, "E &lt;- H", ""),
	"5d": newInstruction("MOV E,L", 1, "E &lt;- L", ""),
	"5e": newInstruction("MOV E,M", 1, "E &lt;- (HL)", ""),
	"5f": newInstruction("MOV E,A", 1, "E &lt;- A", ""),
	"60": newInstruction("MOV H,B", 1, "H &lt;- B", ""),
	"61": newInstruction("MOV H,C", 1, "H &lt;- C", ""),
	"62": newInstruction("MOV H,D", 1, "H &lt;- D", ""),
	"63": newInstruction("MOV H,E", 1, "H &lt;- E", ""),
	"64": newInstruction("MOV H,H", 1, "H &lt;- H", ""),
	"65": newInstruction("MOV H,L", 1, "H &lt;- L", ""),
	"66": newInstruction("MOV H,M", 1, "H &lt;- (HL)", ""),
	"67": newInstruction("MOV H,A", 1, "H &lt;- A", ""),
	"68": newInstruction("MOV L,B", 1, "L &lt;- B", ""),
	"69": newInstruction("MOV L,C", 1, "L &lt;- C", ""),
	"6a": newInstruction("MOV L,D", 1, "L &lt;- D", ""),
	"6b": newInstruction("MOV L,E", 1, "L &lt;- E", ""),
	"6c": newInstruction("MOV L,H", 1, "L &lt;- H", ""),
	"6d": newInstruction("MOV L,L", 1, "L &lt;- L", ""),
	"6e": newInstruction("MOV L,M", 1, "L &lt;- (HL)", ""),
	"6f": newInstruction("MOV L,A", 1, "L &lt;- A", ""),
	"70": newInstruction("MOV M,B", 1, "(HL) &lt;- B", ""),
	"71": newInstruction("MOV M,C", 1, "(HL) &lt;- C", ""),
	"72": newInstruction("MOV M,D", 1, "(HL) &lt;- D", ""),
	"73": newInstruction("MOV M,E", 1, "(HL) &lt;- E", ""),
	"74": newInstruction("MOV M,H", 1, "(HL) &lt;- H", ""),
	"75": newInstruction("MOV M,L", 1, "(HL) &lt;- L", ""),
	"76": newInstruction("HLT", 1, "special", ""),
	"77": newInstruction("MOV M,A", 1, "(HL) &lt;- C", ""),
	"78": newInstruction("MOV A,B", 1, "A &lt;- B", ""),
	"79": newInstruction("MOV A,C", 1, "A &lt;- C", ""),
	"7a": newInstruction("MOV A,D", 1, "A &lt;- D", ""),
	"7b": newInstruction("MOV A,E", 1, "A &lt;- E", ""),
	"7c": newInstruction("MOV A,H", 1, "A &lt;- H", ""),
	"7d": newInstruction("MOV A,L", 1, "A &lt;- L", ""),
	"7e": newInstruction("MOV A,M", 1, "A &lt;- (HL)", ""),
	"7f": newInstruction("MOV A,A", 1, "A &lt;- A", ""),
	"80": newInstruction("ADD B", 1, "Z, S, P, CY, AC", "A &lt;- A + B"),
	"81": newInstruction("ADD C", 1, "Z, S, P, CY, AC", "A &lt;- A + C"),
	"82": newInstruction("ADD D", 1, "Z, S, P, CY, AC", "A &lt;- A + D"),
	"83": newInstruction("ADD E", 1, "Z, S, P, CY, AC", "A &lt;- A + E"),
	"84": newInstruction("ADD H", 1, "Z, S, P, CY, AC", "A &lt;- A + H"),
	"85": newInstruction("ADD L", 1, "Z, S, P, CY, AC", "A &lt;- A + L"),
	"86": newInstruction("ADD M", 1, "Z, S, P, CY, AC", "A &lt;- A + (HL)"),
	"87": newInstruction("ADD A", 1, "Z, S, P, CY, AC", "A &lt;- A + A"),
	"88": newInstruction("ADC B", 1, "Z, S, P, CY, AC", "A &lt;- A + B + CY"),
	"89": newInstruction("ADC C", 1, "Z, S, P, CY, AC", "A &lt;- A + C + CY"),
	"8a": newInstruction("ADC D", 1, "Z, S, P, CY, AC", "A &lt;- A + D + CY"),
	"8b": newInstruction("ADC E", 1, "Z, S, P, CY, AC", "A &lt;- A + E + CY"),
	"8c": newInstruction("ADC H", 1, "Z, S, P, CY, AC", "A &lt;- A + H + CY"),
	"8d": newInstruction("ADC L", 1, "Z, S, P, CY, AC", "A &lt;- A + L + CY"),
	"8e": newInstruction("ADC M", 1, "Z, S, P, CY, AC", "A &lt;- A + (HL) + CY"),
	"8f": newInstruction("ADC A", 1, "Z, S, P, CY, AC", "A &lt;- A + A + CY"),
	"90": newInstruction("SUB B", 1, "Z, S, P, CY, AC", "A &lt;- A - B"),
	"91": newInstruction("SUB C", 1, "Z, S, P, CY, AC", "A &lt;- A - C"),
	"92": newInstruction("SUB D", 1, "Z, S, P, CY, AC", "A &lt;- A + D"),
	"93": newInstruction("SUB E", 1, "Z, S, P, CY, AC", "A &lt;- A - E"),
	"94": newInstruction("SUB H", 1, "Z, S, P, CY, AC", "A &lt;- A + H"),
	"95": newInstruction("SUB L", 1, "Z, S, P, CY, AC", "A &lt;- A - L"),
	"96": newInstruction("SUB M", 1, "Z, S, P, CY, AC", "A &lt;- A + (HL)"),
	"97": newInstruction("SUB A", 1, "Z, S, P, CY, AC", "A &lt;- A - A"),
	"98": newInstruction("SBB B", 1, "Z, S, P, CY, AC", "A &lt;- A - B - CY"),
	"99": newInstruction("SBB C", 1, "Z, S, P, CY, AC", "A &lt;- A - C - CY"),
	"9a": newInstruction("SBB D", 1, "Z, S, P, CY, AC", "A &lt;- A - D - CY"),
	"9b": newInstruction("SBB E", 1, "Z, S, P, CY, AC", "A &lt;- A - E - CY"),
	"9c": newInstruction("SBB H", 1, "Z, S, P, CY, AC", "A &lt;- A - H - CY"),
	"9d": newInstruction("SBB L", 1, "Z, S, P, CY, AC", "A &lt;- A - L - CY"),
	"9e": newInstruction("SBB M", 1, "Z, S, P, CY, AC", "A &lt;- A - (HL) - CY"),
	"9f": newInstruction("SBB A", 1, "Z, S, P, CY, AC", "A &lt;- A - A - CY"),
	"a0": newInstruction("ANA B", 1, "Z, S, P, CY, AC", "A &lt;- A &amp; B"),
	"a1": newInstruction("ANA C", 1, "Z, S, P, CY, AC", "A &lt;- A &amp; C"),
	"a2": newInstruction("ANA D", 1, "Z, S, P, CY, AC", "A &lt;- A &amp; D"),
	"a3": newInstruction("ANA E", 1, "Z, S, P, CY, AC", "A &lt;- A &amp; E"),
	"a4": newInstruction("ANA H", 1, "Z, S, P, CY, AC", "A &lt;- A &amp; H"),
	"a5": newInstruction("ANA L", 1, "Z, S, P, CY, AC", "A &lt;- A &amp; L"),
	"a6": newInstruction("ANA M", 1, "Z, S, P, CY, AC", "A &lt;- A &amp; (HL)"),
	"a7": newInstruction("ANA A", 1, "Z, S, P, CY, AC", "A &lt;- A &amp; A"),
	"a8": newInstruction("XRA B", 1, "Z, S, P, CY, AC", "A &lt;- A ^ B"),
	"a9": newInstruction("XRA C", 1, "Z, S, P, CY, AC", "A &lt;- A ^ C"),
	"aa": newInstruction("XRA D", 1, "Z, S, P, CY, AC", "A &lt;- A ^ D"),
	"ab": newInstruction("XRA E", 1, "Z, S, P, CY, AC", "A &lt;- A ^ E"),
	"ac": newInstruction("XRA H", 1, "Z, S, P, CY, AC", "A &lt;- A ^ H"),
	"ad": newInstruction("XRA L", 1, "Z, S, P, CY, AC", "A &lt;- A ^ L"),
	"ae": newInstruction("XRA M", 1, "Z, S, P, CY, AC", "A &lt;- A ^ (HL)"),
	"af": newInstruction("XRA A", 1, "Z, S, P, CY, AC", "A &lt;- A ^ A"),
	"b0": newInstruction("ORA B", 1, "Z, S, P, CY, AC", "A &lt;- A | B"),
	"b1": newInstruction("ORA C", 1, "Z, S, P, CY, AC", "A &lt;- A | C"),
	"b2": newInstruction("ORA D", 1, "Z, S, P, CY, AC", "A &lt;- A | D"),
	"b3": newInstruction("ORA E", 1, "Z, S, P, CY, AC", "A &lt;- A | E"),
	"b4": newInstruction("ORA H", 1, "Z, S, P, CY, AC", "A &lt;- A | H"),
	"b5": newInstruction("ORA L", 1, "Z, S, P, CY, AC", "A &lt;- A | L"),
	"b6": newInstruction("ORA M", 1, "Z, S, P, CY, AC", "A &lt;- A | (HL)"),
	"b7": newInstruction("ORA A", 1, "Z, S, P, CY, AC", "A &lt;- A | A"),
	"b8": newInstruction("CMP B", 1, "Z, S, P, CY, AC", "A - B"),
	"b9": newInstruction("CMP C", 1, "Z, S, P, CY, AC", "A - C"),
	"ba": newInstruction("CMP D", 1, "Z, S, P, CY, AC", "A - D"),
	"bb": newInstruction("CMP E", 1, "Z, S, P, CY, AC", "A - E"),
	"bc": newInstruction("CMP H", 1, "Z, S, P, CY, AC", "A - H"),
	"bd": newInstruction("CMP L", 1, "Z, S, P, CY, AC", "A - L"),
	"be": newInstruction("CMP M", 1, "Z, S, P, CY, AC", "A - (HL)"),
	"bf": newInstruction("CMP A", 1, "Z, S, P, CY, AC", "A - A"),
	"c0": newInstruction("RNZ", 1, "if NZ, RET", ""),
	"c1": newInstruction("POP B", 1, "C &lt;- (sp); B &lt;- (sp+1); sp &lt;- sp+2", ""),
	"c2": newInstruction("JNZ adr", 3, "if NZ, PC &lt;- adr", ""),
	"c3": newInstruction("JMP adr", 3, "PC &lt;= adr", ""),
	"c4": newInstruction("CNZ adr", 3, "if NZ, CALL adr", ""),
	"c5": newInstruction("PUSH B", 1, "(sp-2)&lt;-C; (sp-1)&lt;-B; sp &lt;- sp - 2", ""),
	"c6": newInstruction("ADI D8", 2, "Z, S, P, CY, AC", "A &lt;- A + byte"),
	"c7": newInstruction("RST 0", 1, "CALL $0", ""),
	"c8": newInstruction("RZ", 1, "if Z, RET", ""),
	"c9": newInstruction("RET", 1, "PC.lo &lt;- (sp); PC.hi&lt;-(sp+1); SP &lt;- SP+2", ""),
	"ca": newInstruction("JZ adr", 3, "if Z, PC &lt;- adr", ""),
	"cb": newInstruction("-", 0, "", ""),
	"cc": newInstruction("CZ adr", 3, "if Z, CALL adr", ""),
	"cd": newInstruction("CALL adr", 3, "(SP-1)&lt;-PC.hi;(SP-2)&lt;-PC.lo;SP&lt;-SP+2;PC=adr", ""),
	"ce": newInstruction("ACI D8", 2, "Z, S, P, CY, AC", "A &lt;- A + data + CY"),
	"cf": newInstruction("RST 1", 1, "CALL $8", ""),
	"d0": newInstruction("RNC", 1, "if NCY, RET", ""),
	"d1": newInstruction("POP D", 1, "E &lt;- (sp); D &lt;- (sp+1); sp &lt;- sp+2", ""),
	"d2": newInstruction("JNC adr", 3, "if NCY, PC&lt;-adr", ""),
	"d3": newInstruction("OUT D8", 2, "special", ""),
	"d4": newInstruction("CNC adr", 3, "if NCY, CALL adr", ""),
	"d5": newInstruction("PUSH D", 1, "(sp-2)&lt;-E; (sp-1)&lt;-D; sp &lt;- sp - 2", ""),
	"d6": newInstruction("SUI D8", 2, "Z, S, P, CY, AC", "A &lt;- A - data"),
	"d7": newInstruction("RST 2", 1, "CALL $10", ""),
	"d8": newInstruction("RC", 1, "if CY, RET", ""),
	"d9": newInstruction("-", 0, "", ""),
	"da": newInstruction("JC adr", 3, "if CY, PC&lt;-adr", ""),
	"db": newInstruction("IN D8", 2, "special", ""),
	"dc": newInstruction("CC adr", 3, "if CY, CALL adr", ""),
	"dd": newInstruction("-", 0, "", ""),
	"de": newInstruction("SBI D8", 2, "Z, S, P, CY, AC", "A &lt;- A - data - CY"),
	"df": newInstruction("RST 3", 1, "CALL $18", ""),
	"e0": newInstruction("RPO", 1, "if PO, RET", ""),
	"e1": newInstruction("POP H", 1, "L &lt;- (sp); H &lt;- (sp+1); sp &lt;- sp+2", ""),
	"e2": newInstruction("JPO adr", 3, "if PO, PC &lt;- adr", ""),
	"e3": newInstruction("XTHL", 1, "L &lt;-&gt; (SP); H &lt;-&gt; (SP+1) ", ""),
	"e4": newInstruction("CPO adr", 3, "if PO, CALL adr", ""),
	"e5": newInstruction("PUSH H", 1, "(sp-2)&lt;-L; (sp-1)&lt;-H; sp &lt;- sp - 2", ""),
	"e6": newInstruction("ANI D8", 2, "Z, S, P, CY, AC", "A &lt;- A &amp; data"),
	"e7": newInstruction("RST 4", 1, "CALL $20", ""),
	"e8": newInstruction("RPE", 1, "if PE, RET", ""),
	"e9": newInstruction("PCHL", 1, "PC.hi &lt;- H; PC.lo &lt;- L", ""),
	"ea": newInstruction("JPE adr", 3, "if PE, PC &lt;- adr", ""),
	"eb": newInstruction("XCHG", 1, "H &lt;-&gt; D; L &lt;-&gt; E", ""),
	"ec": newInstruction("CPE adr", 3, "if PE, CALL adr", ""),
	"ed": newInstruction("-", 0, "", ""),
	"ee": newInstruction("XRI D8", 2, "Z, S, P, CY, AC", "A &lt;- A ^ data"),
	"ef": newInstruction("RST 5", 1, "CALL $28", ""),
	"f0": newInstruction("RP", 1, "if P, RET", ""),
	"f1": newInstruction("POP PSW", 1, "flags &lt;- (sp); A &lt;- (sp+1); sp &lt;- sp+2", ""),
	"f2": newInstruction("JP adr", 3, "if P=1 PC &lt;- adr", ""),
	"f3": newInstruction("DI", 1, "special", ""),
	"f4": newInstruction("CP adr", 3, "if P, PC &lt;- adr", ""),
	"f5": newInstruction("PUSH PSW", 1, "(sp-2)&lt;-flags; (sp-1)&lt;-A; sp &lt;- sp - 2", ""),
	"f6": newInstruction("ORI D8", 2, "Z, S, P, CY, AC", "A &lt;- A | data"),
	"f7": newInstruction("RST 6", 1, "CALL $30", ""),
	"f8": newInstruction("RM", 1, "if M, RET", ""),
	"f9": newInstruction("SPHL", 1, "SP=HL", ""),
	"fa": newInstruction("JM adr", 3, "if M, PC &lt;- adr", ""),
	"fb": newInstruction("EI", 1, "special", ""),
	"fc": newInstruction("CM adr", 3, "if M, CALL adr", ""),
	"fd": newInstruction("-", 0, "", ""),
	"fe": newInstruction("CPI D8", 2, "Z, S, P, CY, AC", "A - data"),
	"ff": newInstruction("RST 7", 1, "CALL $38", ""),
}
